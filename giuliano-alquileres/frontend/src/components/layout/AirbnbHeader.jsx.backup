// AirbnbHeader - Header IDÊNTICO ao Airbnb
import { useState, useEffect, useRef } from "react";
import { useNavigate, Link } from "react-router-dom";
import { FaSearch } from "react-icons/fa";
import { FiMenu, FiUser, FiLogOut, FiSettings, FiGlobe, FiSliders } from "react-icons/fi";
import { useAuth } from "../../contexts/AuthContext";

const AirbnbHeader = ({ onFilterClick }) => {
  const navigate = useNavigate();
  const { isAuthenticated, user, logout } = useAuth();
  const [isUserMenuOpen, setIsUserMenuOpen] = useState(false);
  const [searchFocused, setSearchFocused] = useState(false);
  const userMenuRef = useRef(null);

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (userMenuRef.current && !userMenuRef.current.contains(event.target)) {
        setIsUserMenuOpen(false);
      }
    };

    document.addEventListener("mousedown", handleClickOutside);
    return () => document.removeEventListener("mousedown", handleClickOutside);
  }, []);

  const handleLogout = () => {
    logout();
    setIsUserMenuOpen(false);
    navigate("/");
  };

  const handleSearch = () => {
    navigate("/properties");
  };

  return (
    <header className="sticky top-0 z-50 bg-white border-b border-airbnb-grey-200 shadow-sm">
      <div className="max-w-[2520px] mx-auto px-5 sm:px-10 lg:px-20">
        <div className="flex items-center justify-between h-20">
          {/* Logo - Esquerda */}
          <Link to="/" className="flex items-center flex-shrink-0 gap-2">
            <div className="flex items-center gap-2">
              <div className="w-10 h-10 bg-gradient-to-br from-rausch to-rausch-dark rounded-xlarge flex items-center justify-center shadow-md">
                <span className="text-white text-xl font-bold">Z</span>
              </div>
              <span className="hidden lg:block text-xl font-bold text-rausch">Ziguealuga</span>
            </div>
          </Link>

          {/* Barra de Busca Compacta - Centro */}
          <button
            onClick={handleSearch}
            onFocus={() => setSearchFocused(true)}
            onBlur={() => setSearchFocused(false)}
            className={`hidden md:flex items-center gap-4 border border-airbnb-grey-200 rounded-full py-2 px-4 hover:shadow-md transition-shadow duration-200 ${
              searchFocused ? 'shadow-md' : ''
            }`}
          >
            <span className="text-sm font-semibold text-airbnb-black">Qualquer lugar</span>
            <span className="w-px h-6 bg-airbnb-grey-200"></span>
            <span className="text-sm font-semibold text-airbnb-black">Qualquer semana</span>
            <span className="w-px h-6 bg-airbnb-grey-200"></span>
            <span className="text-sm text-airbnb-grey-400">Hóspedes?</span>
            <div className="ml-1 w-8 h-8 bg-rausch rounded-full flex items-center justify-center">
              <FaSearch className="text-white text-xs" />
            </div>
          </button>

          {/* Versão Mobile - Busca Simples */}
          <button
            onClick={handleSearch}
            className="md:hidden flex items-center gap-3 flex-1 ml-4 border border-airbnb-grey-200 rounded-full py-2.5 px-4 shadow-sm"
          >
            <FaSearch className="text-airbnb-black" />
            <div className="flex flex-col items-start">
              <span className="text-sm font-semibold text-airbnb-black">Para onde?</span>
              <span className="text-xs text-airbnb-grey-400">Qualquer lugar • Qualquer semana</span>
            </div>
          </button>

          {/* Menu Direita */}
          <div className="flex items-center gap-2 flex-shrink-0">
            {/* Botão Filtros */}
            {onFilterClick && (
              <button
                onClick={onFilterClick}
                className="hidden lg:flex items-center gap-2 px-4 py-2.5 border border-airbnb-grey-300 rounded-full hover:bg-airbnb-grey-50 transition-colors"
              >
                <FiSliders className="text-airbnb-black text-sm" />
                <span className="text-sm font-semibold text-airbnb-black">Filtros</span>
              </button>
            )}

            {/* Botão Idioma */}
            <button className="hidden lg:block p-3 hover:bg-airbnb-grey-50 rounded-full transition-colors">
              <FiGlobe className="text-airbnb-black text-lg" />
            </button>

            {/* Menu de Usuário */}
            <div className="relative" ref={userMenuRef}>
              <button
                onClick={() => setIsUserMenuOpen(!isUserMenuOpen)}
                className="flex items-center gap-3 pl-3 pr-2 py-1.5 border border-airbnb-grey-300 rounded-full hover:shadow-md transition-all duration-200"
              >
                <FiMenu className="text-airbnb-black text-base" />
                <div className="w-7 h-7 bg-airbnb-grey-400 rounded-full flex items-center justify-center">
                  {isAuthenticated && user?.name ? (
                    <span className="text-white text-xs font-semibold uppercase">
                      {user.name.charAt(0)}
                    </span>
                  ) : (
                    <FiUser className="text-white text-sm" />
                  )}
                </div>
              </button>

              {/* Dropdown Menu */}
              {isUserMenuOpen && (
                <div className="absolute right-0 mt-2 w-60 bg-white rounded-xlarge shadow-elevation-high border border-airbnb-grey-100 py-2 overflow-hidden">
                  {isAuthenticated ? (
                    <>
                      <div className="px-4 py-3 border-b border-airbnb-grey-100">
                        <p className="text-sm font-semibold text-airbnb-black truncate">
                          {user?.name}
                        </p>
                        <p className="text-xs text-airbnb-grey-400 truncate mt-0.5">
                          {user?.email}
                        </p>
                      </div>

                      <Link
                        to="/my-bookings"
                        className="flex items-center gap-3 px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Minhas viagens
                      </Link>

                      <Link
                        to="/favorites"
                        className="flex items-center gap-3 px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Lista de desejos
                      </Link>

                      {(user?.role === "admin" || user?.role === "admin_master") && (
                        <>
                          <div className="my-2 border-t border-airbnb-grey-100"></div>
                          <Link
                            to="/admin"
                            className="flex items-center gap-3 px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                            onClick={() => setIsUserMenuOpen(false)}
                          >
                            Painel Admin
                          </Link>
                        </>
                      )}

                      <div className="my-2 border-t border-airbnb-grey-100"></div>

                      <Link
                        to="/profile"
                        className="flex items-center gap-3 px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Conta
                      </Link>

                      <button
                        onClick={handleLogout}
                        className="w-full flex items-center gap-3 px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors text-left"
                      >
                        Sair
                      </button>
                    </>
                  ) : (
                    <>
                      <Link
                        to="/register"
                        className="block px-4 py-3 text-sm font-semibold text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Cadastre-se
                      </Link>
                      <Link
                        to="/login"
                        className="block px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Entrar
                      </Link>
                      <div className="my-2 border-t border-airbnb-grey-100"></div>
                      <Link
                        to="/host"
                        className="block px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Anuncie seu espaço no Giuliano
                      </Link>
                      <Link
                        to="/help"
                        className="block px-4 py-3 text-sm text-airbnb-black hover:bg-airbnb-grey-50 transition-colors"
                        onClick={() => setIsUserMenuOpen(false)}
                      >
                        Central de Ajuda
                      </Link>
                    </>
                  )}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
    </header>
  );
};

export default AirbnbHeader;
